name: "Check File Content"
description: "Check a file for expected words."

inputs:
  # Required inputs for grading workflows
  check-name:
    description: "The name of the check"
    required: true
  pass-message:
    description: "The message to return if the check passes"
    required: true
  fail-message:
    description: "The message to return if the check fails"
    required: true

  # Optional inputs for grading workflows
  debug:
    description: "Show more log messages to help debugging"
    required: false
    default: "false"

  # Required inputs for this grading workflow
  file:
    description: "The path of the file to be checked."
    required: true
  required-words:
    description: "The words that should be present in the file. Comma separated."
    required: true

outputs:
  result:
    description: "A stringified JSON object containing the test result summary."
    value: ${{ steps.check-file-content.outputs.result }}

runs:
  using: "composite"
  steps:
    - name: Check file content
      id: check-file-content
      uses: actions/github-script@v7
      env:
        # Required inputs
        CHECK_NAME: ${{ inputs.check-name }}
        PASS_MESSAGE: ${{ inputs.pass-message }}
        FAIL_MESSAGE: ${{ inputs.fail-message }}
        FILE: ${{ inputs.file }}
        REQUIRED_WORDS: ${{ inputs.required-words }}
        # Optional inputs
        DEBUG: ${{ inputs.debug }}
        OWNER: ${{ inputs.owner }}
        REPO_NAME: ${{ inputs.repo-name }}
      with:
        result-encoding: string
        script: |
          const fs = require('fs');

          // Check for debug mode
          const DEBUG = process.env.DEBUG === 'true';
          if (DEBUG) console.log('Debug mode: enabled');

          // Result object
          const test = {
            "name": "Credentials file",
            "passed": false,
            "message": ""
          }

          // Check if the file exists
          const file = process.env.FILE;
          if (DEBUG) console.log('File path:', file);
          if (!fs.existsSync(file)) {
            test.message = "File not found. Please try again.";
            console.log('Test results:', JSON.stringify(test, null, 2));
            return JSON.stringify(test);
          }

          // Read the file content
          const fileContent = fs.readFileSync(process.env.FILE, 'utf8');
          if (DEBUG) console.log('File content loaded. Size:', fileContent.length);

          // Load the required words and trim
          const requiredWords = process.env.REQUIRED_WORDS.split(',').map(word => word.trim());
          if (DEBUG) console.log('Required words:', requiredWords);

          // Check words
          let passed= true;
          for (const word of requiredWords) {
            if (!fileContent.includes(word)) {
              passed = false;
              if (DEBUG) console.log('File content does not include:', word);
            }
          }

          // Update result object
          test.passed = passed;
          test.message = passed ? process.env.PASS_MESSAGE : process.env.FAIL_MESSAGE;

          // Return the checks object as a JSON string
          console.log('Test results:', JSON.stringify(test, null, 2));
          return JSON.stringify(test);
