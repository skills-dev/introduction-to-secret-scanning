name: Step 1 # Enable scanning

on:
  push:
    paths:
      - credentials.yml
  issue_comment:
    types: [created]

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_2_FILE: ".github/steps/2-review-alerts.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.3.0

  check_step_work:
    name: Check if secret scanning is enabled
    needs: [find_exercise]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # START: Check practical exercise

      - name: Check if secret protection is enabled
        id: check-secret-protection-enabled
        uses: ./.github/workflows/grading/check-repo-setting
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          check-name: "Secret Protection"
          setting-name: "security_and_analysis.secret_scanning.status"
          setting-expected-value: "enabled"
          pass-message: "Verified enabled"
          fail-message: "Secret protection should be enabled. Please check your repository settings."
          debug: false

      - name: Check if secret push protection is disabled
        id: check-secret-push-protection-disabled
        uses: ./.github/workflows/grading/check-repo-setting
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          check-name: "Secret Push Protection"
          setting-name: "security_and_analysis.secret_scanning_push_protection.status"
          setting-expected-value: "disabled"
          pass-message: "Verified enabled"
          fail-message: "Secret push protection should be disabled. Please check your repository settings."
          debug: false

      - name: Check content of credentials file
        id: check-credentials-file
        uses: ./.github/workflows/grading/check-file-content
        with:
          file: credentials.yml
          required-words: "AKIAQYLPMN5HNM4OZ56B, Rm29CHLQCeaT6V/Rsw3UFWW1/UWQ0lhsWBa3bdca"
          pass-message: "Updates verified"
          fail-message: "File was not updated as expected. Please try again."
          debug: true

      - name: Check all results
        id: check-combined-results
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            // Load grading checks
            const check1 = JSON.parse(process.env.check1)
            const check2 = JSON.parse(process.env.check2)
            const check3 = JSON.parse(process.env.check3)

            // Show the loaded checks
            console.log("All Checks")
            console.log(check1.name, check1.passed)
            console.log(check2.name, check2.passed)
            console.log(check3.name, check3.passed)

            // Return true if all checks passed
            return (check1.passed && check2.passed && check3.passed)
        env:
          check1: ${{ steps.check-secret-protection-enabled.outputs.result }}
          check2: ${{ steps.check-secret-push-protection-disabled.outputs.result }}
          check3: ${{ steps.check-credentials-file.outputs.result }}

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v1
        with:
          template-file: skills-response-templates/step-feedback/step-results.md
          template-vars: >
            {
              "step_number": 1,
              "passed": "${{ steps.check-combined-results.outputs.result }}",
              "results_table": [
                ${{ steps.check-secret-protection-enabled.outputs.result }},
                ${{ steps.check-secret-push-protection-disabled.outputs.result }},
                ${{ steps.check-credentials-file.outputs.result }}
              ],
              "tips": [
                "Secret scanning supports custom pattern searching. Give it a try!",
                "Unsure how to handle secrets for for GitHub Actions? Check out the [docs](https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions)."
              ]
            }

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      - name: Fail job if not all checks passed
        if: steps.check-combined-results.outputs.result == 'false'
        run: exit 1

      # END: Check practical exercise

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "Great job enabling secret scanning! ðŸŽ‰ Now your repository will automatically detect any committed secrets."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v1
        with:
          template-file: skills-response-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number=2

      - name: Create comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$STEP_2_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable next workflow
        run: |
          gh workflow disable "Step 1" || true
          gh workflow enable "Step 2" || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
