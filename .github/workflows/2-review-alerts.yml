name: Step 2 # Review Alerts

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  security-events: read

env:
  # Keywords required in the issue comment to let this workflow run
  REQUIRED_ISSUE_COMMENT_KEYWORDS: "@professortocat"
  STEP_3_FILE: ".github/steps/3-enable-push-protection.md"

jobs:
  required_issue_comment_keywords:
    name: Check issue comment text for required keywords
    runs-on: ubuntu-latest

    steps:
      - name: Stop early if missing the expected keywords
        run: |
          required_keywords=(${REQUIRED_ISSUE_COMMENT_KEYWORDS//,/ })
          for keyword in "${required_keywords[@]}"; do
          if [[ ! "$COMMENT_BODY" =~ $keyword ]]; then
            echo "Unrecognized request. Ending workflow."
            exit 0
          fi
          done
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}

  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.3.0

  check_step_work:
    name: Check for secret scanning alert
    needs: [find_exercise, required_issue_comment_keywords]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # START: Check practical exercise

      - name: Check for open alerts
        id: check-open-alerts
        uses: actions/github-script@v7
        env:
          OWNER: ${{ github.event.repository.owner.login }}
          REPO: ${{ github.event.repository.name }}
        with:
          result-encoding: string
          script: |
            // Result object
            const test = {
              "name": "Alerts",
              "passed": false,
              "message": ""
            }

            // Query the repo for open alerts
            const { data: closed_alerts } = await github.rest.secretScanning.listAlertsForRepo({
              owner: process.env.OWNER,
              repo: process.env.REPO,
              state: 'resolved'
            });

            // Check if any alerts are present
            if(closed_alerts.length > 0) {
              test.passed = true;
              test.message = "Practice resolving an alert.";
            } else {
              test.passed = false;
              test.message = `Please try resolving an alert.`;
            }

            // Return the test results object as a JSON string
            console.log('Test results:', JSON.stringify(test, null, 2));
            return JSON.stringify(test);

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v1
        with:
          template-file: skills-response-templates/step-feedback/step-results.md
          template-vars: >
            {
              "step_number": 2,
              "passed": "${{ fromJson(steps.check-open-alerts.outputs.result).passed }}",
              "results_table": [
                ${{ steps.check-open-alerts.outputs.result }}
              ]
            }

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      # END: Check practical exercise

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "Great work! ðŸŽ‰ A secret scanning alert was resolved. This is exactly what we wanted! GitHub detected the token pattern and alerted us so we could handle it properly."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v1
        with:
          template-file: skills-response-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number=3

      - name: Create comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$STEP_3_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable next workflow
        run: |
          gh workflow disable "Step 2" || true
          gh workflow enable "Step 3" || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
